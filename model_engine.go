/*
OpenAI API

APIs for sampling from and fine-tuning language models

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Engine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Engine{}

// Engine struct for Engine
type Engine struct {
	Id string `json:"id"`
	Object string `json:"object"`
	Created NullableInt32 `json:"created"`
	Ready bool `json:"ready"`
}

// NewEngine instantiates a new Engine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEngine(id string, object string, created NullableInt32, ready bool) *Engine {
	this := Engine{}
	this.Id = id
	this.Object = object
	this.Created = created
	this.Ready = ready
	return &this
}

// NewEngineWithDefaults instantiates a new Engine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEngineWithDefaults() *Engine {
	this := Engine{}
	return &this
}

// GetId returns the Id field value
func (o *Engine) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Engine) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Engine) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value
func (o *Engine) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *Engine) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *Engine) SetObject(v string) {
	o.Object = v
}

// GetCreated returns the Created field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Engine) GetCreated() int32 {
	if o == nil || o.Created.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Created.Get()
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Engine) GetCreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created.Get(), o.Created.IsSet()
}

// SetCreated sets field value
func (o *Engine) SetCreated(v int32) {
	o.Created.Set(&v)
}

// GetReady returns the Ready field value
func (o *Engine) GetReady() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Ready
}

// GetReadyOk returns a tuple with the Ready field value
// and a boolean to check if the value has been set.
func (o *Engine) GetReadyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ready, true
}

// SetReady sets field value
func (o *Engine) SetReady(v bool) {
	o.Ready = v
}

func (o Engine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Engine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["object"] = o.Object
	toSerialize["created"] = o.Created.Get()
	toSerialize["ready"] = o.Ready
	return toSerialize, nil
}

type NullableEngine struct {
	value *Engine
	isSet bool
}

func (v NullableEngine) Get() *Engine {
	return v.value
}

func (v *NullableEngine) Set(val *Engine) {
	v.value = val
	v.isSet = true
}

func (v NullableEngine) IsSet() bool {
	return v.isSet
}

func (v *NullableEngine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEngine(val *Engine) *NullableEngine {
	return &NullableEngine{value: val, isSet: true}
}

func (v NullableEngine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEngine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


