/*
OpenAI API

APIs for sampling from and fine-tuning language models

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ImagesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImagesResponse{}

// ImagesResponse struct for ImagesResponse
type ImagesResponse struct {
	Created int32 `json:"created"`
	Data []ImagesResponseDataInner `json:"data"`
}

// NewImagesResponse instantiates a new ImagesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImagesResponse(created int32, data []ImagesResponseDataInner) *ImagesResponse {
	this := ImagesResponse{}
	this.Created = created
	this.Data = data
	return &this
}

// NewImagesResponseWithDefaults instantiates a new ImagesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImagesResponseWithDefaults() *ImagesResponse {
	this := ImagesResponse{}
	return &this
}

// GetCreated returns the Created field value
func (o *ImagesResponse) GetCreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ImagesResponse) GetCreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ImagesResponse) SetCreated(v int32) {
	o.Created = v
}

// GetData returns the Data field value
func (o *ImagesResponse) GetData() []ImagesResponseDataInner {
	if o == nil {
		var ret []ImagesResponseDataInner
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ImagesResponse) GetDataOk() ([]ImagesResponseDataInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ImagesResponse) SetData(v []ImagesResponseDataInner) {
	o.Data = v
}

func (o ImagesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImagesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableImagesResponse struct {
	value *ImagesResponse
	isSet bool
}

func (v NullableImagesResponse) Get() *ImagesResponse {
	return v.value
}

func (v *NullableImagesResponse) Set(val *ImagesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImagesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImagesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImagesResponse(val *ImagesResponse) *NullableImagesResponse {
	return &NullableImagesResponse{value: val, isSet: true}
}

func (v NullableImagesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImagesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


