/*
OpenAI API

APIs for sampling from and fine-tuning language models

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChatCompletionRequestMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatCompletionRequestMessage{}

// ChatCompletionRequestMessage struct for ChatCompletionRequestMessage
type ChatCompletionRequestMessage struct {
	// The role of the author of this message.
	Role string `json:"role"`
	// The contents of the message
	Content string `json:"content"`
	// The name of the user in a multi-user chat
	Name *string `json:"name,omitempty"`
}

// NewChatCompletionRequestMessage instantiates a new ChatCompletionRequestMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatCompletionRequestMessage(role string, content string) *ChatCompletionRequestMessage {
	this := ChatCompletionRequestMessage{}
	this.Role = role
	this.Content = content
	return &this
}

// NewChatCompletionRequestMessageWithDefaults instantiates a new ChatCompletionRequestMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatCompletionRequestMessageWithDefaults() *ChatCompletionRequestMessage {
	this := ChatCompletionRequestMessage{}
	return &this
}

// GetRole returns the Role field value
func (o *ChatCompletionRequestMessage) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestMessage) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *ChatCompletionRequestMessage) SetRole(v string) {
	o.Role = v
}

// GetContent returns the Content field value
func (o *ChatCompletionRequestMessage) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestMessage) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ChatCompletionRequestMessage) SetContent(v string) {
	o.Content = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChatCompletionRequestMessage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionRequestMessage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChatCompletionRequestMessage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChatCompletionRequestMessage) SetName(v string) {
	o.Name = &v
}

func (o ChatCompletionRequestMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatCompletionRequestMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["role"] = o.Role
	toSerialize["content"] = o.Content
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableChatCompletionRequestMessage struct {
	value *ChatCompletionRequestMessage
	isSet bool
}

func (v NullableChatCompletionRequestMessage) Get() *ChatCompletionRequestMessage {
	return v.value
}

func (v *NullableChatCompletionRequestMessage) Set(val *ChatCompletionRequestMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableChatCompletionRequestMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableChatCompletionRequestMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatCompletionRequestMessage(val *ChatCompletionRequestMessage) *NullableChatCompletionRequestMessage {
	return &NullableChatCompletionRequestMessage{value: val, isSet: true}
}

func (v NullableChatCompletionRequestMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatCompletionRequestMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


