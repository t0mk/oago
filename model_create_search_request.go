/*
OpenAI API

APIs for sampling from and fine-tuning language models

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateSearchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSearchRequest{}

// CreateSearchRequest struct for CreateSearchRequest
type CreateSearchRequest struct {
	// Query to search against the documents.
	Query string `json:"query"`
	// Up to 200 documents to search over, provided as a list of strings.  The maximum document length (in tokens) is 2034 minus the number of tokens in the query.  You should specify either `documents` or a `file`, but not both. 
	Documents []string `json:"documents,omitempty"`
	// The ID of an uploaded file that contains documents to search over.  You should specify either `documents` or a `file`, but not both. 
	File NullableString `json:"file,omitempty"`
	// The maximum number of documents to be re-ranked and returned by search.  This flag only takes effect when `file` is set. 
	MaxRerank NullableInt32 `json:"max_rerank,omitempty"`
	// A special boolean flag for showing metadata. If set to `true`, each document entry in the returned JSON will contain a \"metadata\" field.  This flag only takes effect when `file` is set. 
	ReturnMetadata NullableBool `json:"return_metadata,omitempty"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
	User *string `json:"user,omitempty"`
}

// NewCreateSearchRequest instantiates a new CreateSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSearchRequest(query string) *CreateSearchRequest {
	this := CreateSearchRequest{}
	this.Query = query
	var maxRerank int32 = 200
	this.MaxRerank = *NewNullableInt32(&maxRerank)
	var returnMetadata bool = false
	this.ReturnMetadata = *NewNullableBool(&returnMetadata)
	return &this
}

// NewCreateSearchRequestWithDefaults instantiates a new CreateSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSearchRequestWithDefaults() *CreateSearchRequest {
	this := CreateSearchRequest{}
	var maxRerank int32 = 200
	this.MaxRerank = *NewNullableInt32(&maxRerank)
	var returnMetadata bool = false
	this.ReturnMetadata = *NewNullableBool(&returnMetadata)
	return &this
}

// GetQuery returns the Query field value
func (o *CreateSearchRequest) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *CreateSearchRequest) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *CreateSearchRequest) SetQuery(v string) {
	o.Query = v
}

// GetDocuments returns the Documents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSearchRequest) GetDocuments() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSearchRequest) GetDocumentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Documents) {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *CreateSearchRequest) HasDocuments() bool {
	if o != nil && IsNil(o.Documents) {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []string and assigns it to the Documents field.
func (o *CreateSearchRequest) SetDocuments(v []string) {
	o.Documents = v
}

// GetFile returns the File field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSearchRequest) GetFile() string {
	if o == nil || IsNil(o.File.Get()) {
		var ret string
		return ret
	}
	return *o.File.Get()
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSearchRequest) GetFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.File.Get(), o.File.IsSet()
}

// HasFile returns a boolean if a field has been set.
func (o *CreateSearchRequest) HasFile() bool {
	if o != nil && o.File.IsSet() {
		return true
	}

	return false
}

// SetFile gets a reference to the given NullableString and assigns it to the File field.
func (o *CreateSearchRequest) SetFile(v string) {
	o.File.Set(&v)
}
// SetFileNil sets the value for File to be an explicit nil
func (o *CreateSearchRequest) SetFileNil() {
	o.File.Set(nil)
}

// UnsetFile ensures that no value is present for File, not even an explicit nil
func (o *CreateSearchRequest) UnsetFile() {
	o.File.Unset()
}

// GetMaxRerank returns the MaxRerank field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSearchRequest) GetMaxRerank() int32 {
	if o == nil || IsNil(o.MaxRerank.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxRerank.Get()
}

// GetMaxRerankOk returns a tuple with the MaxRerank field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSearchRequest) GetMaxRerankOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxRerank.Get(), o.MaxRerank.IsSet()
}

// HasMaxRerank returns a boolean if a field has been set.
func (o *CreateSearchRequest) HasMaxRerank() bool {
	if o != nil && o.MaxRerank.IsSet() {
		return true
	}

	return false
}

// SetMaxRerank gets a reference to the given NullableInt32 and assigns it to the MaxRerank field.
func (o *CreateSearchRequest) SetMaxRerank(v int32) {
	o.MaxRerank.Set(&v)
}
// SetMaxRerankNil sets the value for MaxRerank to be an explicit nil
func (o *CreateSearchRequest) SetMaxRerankNil() {
	o.MaxRerank.Set(nil)
}

// UnsetMaxRerank ensures that no value is present for MaxRerank, not even an explicit nil
func (o *CreateSearchRequest) UnsetMaxRerank() {
	o.MaxRerank.Unset()
}

// GetReturnMetadata returns the ReturnMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSearchRequest) GetReturnMetadata() bool {
	if o == nil || IsNil(o.ReturnMetadata.Get()) {
		var ret bool
		return ret
	}
	return *o.ReturnMetadata.Get()
}

// GetReturnMetadataOk returns a tuple with the ReturnMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSearchRequest) GetReturnMetadataOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnMetadata.Get(), o.ReturnMetadata.IsSet()
}

// HasReturnMetadata returns a boolean if a field has been set.
func (o *CreateSearchRequest) HasReturnMetadata() bool {
	if o != nil && o.ReturnMetadata.IsSet() {
		return true
	}

	return false
}

// SetReturnMetadata gets a reference to the given NullableBool and assigns it to the ReturnMetadata field.
func (o *CreateSearchRequest) SetReturnMetadata(v bool) {
	o.ReturnMetadata.Set(&v)
}
// SetReturnMetadataNil sets the value for ReturnMetadata to be an explicit nil
func (o *CreateSearchRequest) SetReturnMetadataNil() {
	o.ReturnMetadata.Set(nil)
}

// UnsetReturnMetadata ensures that no value is present for ReturnMetadata, not even an explicit nil
func (o *CreateSearchRequest) UnsetReturnMetadata() {
	o.ReturnMetadata.Unset()
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *CreateSearchRequest) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSearchRequest) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *CreateSearchRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *CreateSearchRequest) SetUser(v string) {
	o.User = &v
}

func (o CreateSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSearchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["query"] = o.Query
	if o.Documents != nil {
		toSerialize["documents"] = o.Documents
	}
	if o.File.IsSet() {
		toSerialize["file"] = o.File.Get()
	}
	if o.MaxRerank.IsSet() {
		toSerialize["max_rerank"] = o.MaxRerank.Get()
	}
	if o.ReturnMetadata.IsSet() {
		toSerialize["return_metadata"] = o.ReturnMetadata.Get()
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableCreateSearchRequest struct {
	value *CreateSearchRequest
	isSet bool
}

func (v NullableCreateSearchRequest) Get() *CreateSearchRequest {
	return v.value
}

func (v *NullableCreateSearchRequest) Set(val *CreateSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSearchRequest(val *CreateSearchRequest) *NullableCreateSearchRequest {
	return &NullableCreateSearchRequest{value: val, isSet: true}
}

func (v NullableCreateSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


