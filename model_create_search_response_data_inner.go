/*
OpenAI API

APIs for sampling from and fine-tuning language models

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateSearchResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSearchResponseDataInner{}

// CreateSearchResponseDataInner struct for CreateSearchResponseDataInner
type CreateSearchResponseDataInner struct {
	Object *string `json:"object,omitempty"`
	Document *int32 `json:"document,omitempty"`
	Score *float32 `json:"score,omitempty"`
}

// NewCreateSearchResponseDataInner instantiates a new CreateSearchResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSearchResponseDataInner() *CreateSearchResponseDataInner {
	this := CreateSearchResponseDataInner{}
	return &this
}

// NewCreateSearchResponseDataInnerWithDefaults instantiates a new CreateSearchResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSearchResponseDataInnerWithDefaults() *CreateSearchResponseDataInner {
	this := CreateSearchResponseDataInner{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *CreateSearchResponseDataInner) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSearchResponseDataInner) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *CreateSearchResponseDataInner) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *CreateSearchResponseDataInner) SetObject(v string) {
	o.Object = &v
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *CreateSearchResponseDataInner) GetDocument() int32 {
	if o == nil || IsNil(o.Document) {
		var ret int32
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSearchResponseDataInner) GetDocumentOk() (*int32, bool) {
	if o == nil || IsNil(o.Document) {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *CreateSearchResponseDataInner) HasDocument() bool {
	if o != nil && !IsNil(o.Document) {
		return true
	}

	return false
}

// SetDocument gets a reference to the given int32 and assigns it to the Document field.
func (o *CreateSearchResponseDataInner) SetDocument(v int32) {
	o.Document = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *CreateSearchResponseDataInner) GetScore() float32 {
	if o == nil || IsNil(o.Score) {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSearchResponseDataInner) GetScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *CreateSearchResponseDataInner) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *CreateSearchResponseDataInner) SetScore(v float32) {
	o.Score = &v
}

func (o CreateSearchResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSearchResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Document) {
		toSerialize["document"] = o.Document
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	return toSerialize, nil
}

type NullableCreateSearchResponseDataInner struct {
	value *CreateSearchResponseDataInner
	isSet bool
}

func (v NullableCreateSearchResponseDataInner) Get() *CreateSearchResponseDataInner {
	return v.value
}

func (v *NullableCreateSearchResponseDataInner) Set(val *CreateSearchResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSearchResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSearchResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSearchResponseDataInner(val *CreateSearchResponseDataInner) *NullableCreateSearchResponseDataInner {
	return &NullableCreateSearchResponseDataInner{value: val, isSet: true}
}

func (v NullableCreateSearchResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSearchResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


